[{"F:\\WEB\\ReactProjects\\react-table-demo\\src\\index.js":"1","F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\BasciTable.js":"2","F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\Columns.js":"3","F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\SortingTable.js":"4","F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\FilteringTabel.js":"5","F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\GlobalFilter.js":"6","F:\\WEB\\ReactProjects\\react-table-demo\\src\\App.js":"7","F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\ColumnFilter.js":"8","F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\Pagination.js":"9","F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\RowSelection\\RowSelection.js":"10","F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\RowSelection\\Checkbox.js":"11","F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\ColumnOrder.js":"12","F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\ColumnHiding.js":"13"},{"size":203,"mtime":1606707165381,"results":"14","hashOfConfig":"15"},{"size":1896,"mtime":1606123353750,"results":"16","hashOfConfig":"15"},{"size":1616,"mtime":1606288689276,"results":"17","hashOfConfig":"15"},{"size":2215,"mtime":1606127052299,"results":"18","hashOfConfig":"15"},{"size":2297,"mtime":1606284878465,"results":"19","hashOfConfig":"15"},{"size":271,"mtime":1606283963870,"results":"20","hashOfConfig":"15"},{"size":515,"mtime":1606708531739,"results":"21","hashOfConfig":"15"},{"size":336,"mtime":1606284581269,"results":"22","hashOfConfig":"15"},{"size":3740,"mtime":1606533008064,"results":"23","hashOfConfig":"15"},{"size":2767,"mtime":1606707677471,"results":"24","hashOfConfig":"15"},{"size":416,"mtime":1606707200096,"results":"25","hashOfConfig":"15"},{"size":2215,"mtime":1606708203525,"results":"26","hashOfConfig":"15"},{"size":2385,"mtime":1606708619209,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"j6o2z4",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":1,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"F:\\WEB\\ReactProjects\\react-table-demo\\src\\index.js",["62"],"F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\BasciTable.js",["63"],"import React, { useMemo } from 'react';\r\nimport { Columns, GROUPED_COLUMNS } from './Columns';\r\nimport MOCK_DATA from './MOCK_DATA';\r\nimport { useTable } from 'react-table';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function BasciTable() {\r\n  const columns = useMemo(() => Columns, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  const tableInstance = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    footerGroups,\r\n  } = tableInstance;\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n          {footerGroups.map((footerGroup) => {\r\n            return (\r\n              <tr {...footerGroup.getFooterGroupProps}>\r\n                {footerGroup.headers.map((column) => {\r\n                  return (\r\n                    <td {...column.getFooterProps}>\r\n                      {column.render('Footer')}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tfoot>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n",["64","65"],"F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\Columns.js",[],"F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\SortingTable.js",["66"],"import React, { useMemo } from 'react';\r\nimport { Columns, GROUPED_COLUMNS } from './Columns';\r\nimport MOCK_DATA from './MOCK_DATA';\r\nimport { useTable, useSortBy } from 'react-table';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function SoringTable() {\r\n  const columns = useMemo(() => Columns, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  const tableInstance = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useSortBy\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    footerGroups,\r\n  } = tableInstance;\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {/*Add all sorting features to each colomumns */}\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted ? (column.isSortedDesc ? 'ðŸ”½' : 'ðŸ”¼') : ''}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n          {footerGroups.map((footerGroup) => {\r\n            return (\r\n              <tr {...footerGroup.getFooterGroupProps}>\r\n                {footerGroup.headers.map((column) => {\r\n                  return (\r\n                    <td {...column.getFooterProps}>\r\n                      {column.render('Footer')}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tfoot>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n",["67","68"],"F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\FilteringTabel.js",["69"],"import React, { useMemo } from 'react';\r\nimport { Columns, GROUPED_COLUMNS } from './Columns';\r\nimport MOCK_DATA from './MOCK_DATA';\r\nimport { useTable, useGlobalFilter, useFilters } from 'react-table';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { GlobalFilter } from './GlobalFilter';\r\n\r\nexport default function FilteringTable() {\r\n  const columns = useMemo(() => Columns, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  const tableInstance = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    footerGroups,\r\n    state,\r\n    setGlobalFilter,\r\n  } = tableInstance;\r\n\r\n  const { globalFilter } = state;\r\n\r\n  return (\r\n    <>\r\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>\r\n                  {column.render('Header')}\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n          {footerGroups.map((footerGroup) => {\r\n            return (\r\n              <tr {...footerGroup.getFooterGroupProps}>\r\n                {footerGroup.headers.map((column) => {\r\n                  return (\r\n                    <td {...column.getFooterProps}>\r\n                      {column.render('Footer')}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tfoot>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n","F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\GlobalFilter.js",["70"],"import React, { useState } from 'react';\r\n\r\nexport const GlobalFilter = ({ filter, setFilter }) => {\r\n  return (\r\n    <span className='offset-md-5 '>\r\n      Search:\r\n      <input value={filter || ''} onChange={(e) => setFilter(e.target.value)} />\r\n    </span>\r\n  );\r\n};\r\n","F:\\WEB\\ReactProjects\\react-table-demo\\src\\App.js",["71","72","73","74","75","76","77"],"F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\ColumnFilter.js",["78"],"import React, { useState } from 'react';\r\n\r\nexport const ColumnFilter = ({ column }) => {\r\n  const { filterValue, setFilter } = column;\r\n  return (\r\n    <span className='offset-md-5 '>\r\n      Search:\r\n      <input\r\n        value={filterValue || ''}\r\n        onChange={(e) => setFilter(e.target.value)}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n","F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\Pagination.js",["79"],"F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\RowSelection\\RowSelection.js",["80"],"F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\RowSelection\\Checkbox.js",[],"F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\ColumnOrder.js",["81"],"F:\\WEB\\ReactProjects\\react-table-demo\\src\\Components\\ColumnHiding.js",["82"],"import React, { useMemo } from 'react';\r\nimport { Columns, GROUPED_COLUMNS } from './Columns';\r\nimport MOCK_DATA from './MOCK_DATA';\r\nimport { useTable } from 'react-table';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Checkbox } from './RowSelection/Checkbox';\r\n\r\nexport default function ColumnHiding() {\r\n  const columns = useMemo(() => Columns, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  const tableInstance = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    footerGroups,\r\n    allColumns,\r\n    getToggleHideAllColumnsProps,\r\n  } = tableInstance;\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          <Checkbox {...getToggleHideAllColumnsProps()} /> Toggle All\r\n        </div>\r\n        {allColumns.map((column) => (\r\n          <div key={column.id}>\r\n            <label>\r\n              <input type='checkbox' {...column.getToggleHiddenProps()} />\r\n              {column.Header}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n          {footerGroups.map((footerGroup) => {\r\n            return (\r\n              <tr {...footerGroup.getFooterGroupProps}>\r\n                {footerGroup.headers.map((column) => {\r\n                  return (\r\n                    <td {...column.getFooterProps}>\r\n                      {column.render('Footer')}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tfoot>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":null,"fatal":true,"severity":2,"message":"83","line":9,"column":3},{"ruleId":"84","severity":1,"message":"85","line":2,"column":19,"nodeType":"86","messageId":"87","endLine":2,"endColumn":34},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"84","severity":1,"message":"85","line":2,"column":19,"nodeType":"86","messageId":"87","endLine":2,"endColumn":34},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"84","severity":1,"message":"85","line":2,"column":19,"nodeType":"86","messageId":"87","endLine":2,"endColumn":34},{"ruleId":"84","severity":1,"message":"94","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"95","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":18},{"ruleId":"84","severity":1,"message":"96","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":22},{"ruleId":"84","severity":1,"message":"97","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":19},{"ruleId":"84","severity":1,"message":"98","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":18},{"ruleId":"84","severity":1,"message":"99","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":20},{"ruleId":"84","severity":1,"message":"100","line":8,"column":8,"nodeType":"86","messageId":"87","endLine":8,"endColumn":19},{"ruleId":"101","severity":2,"message":"102","line":13,"column":8,"nodeType":"103","endLine":13,"endColumn":20},{"ruleId":"84","severity":1,"message":"94","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":2,"column":19,"nodeType":"86","messageId":"87","endLine":2,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":2,"column":19,"nodeType":"86","messageId":"87","endLine":2,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":2,"column":19,"nodeType":"86","messageId":"87","endLine":2,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":2,"column":19,"nodeType":"86","messageId":"87","endLine":2,"endColumn":34},"Parsing error: Unexpected token, expected \",\"\n\n   7 |     <App />\n   8 |  // </React.StrictMode>,\n>  9 |   document.getElementById('root')\n     |   ^\n  10 | );\n  11 | \n  12 |","no-unused-vars","'GROUPED_COLUMNS' is defined but never used.","Identifier","unusedVar","no-native-reassign",["104"],"no-negated-in-lhs",["105"],["104"],["105"],"'useState' is defined but never used.","'BasciTable' is defined but never used.","'FilteringTable' is defined but never used.","'SoringTable' is defined but never used.","'Pagination' is defined but never used.","'RowSelection' is defined but never used.","'ColumnOrder' is defined but never used.","react/jsx-no-undef","'ColumnHiding' is not defined.","JSXIdentifier","no-global-assign","no-unsafe-negation"]